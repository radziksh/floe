# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2016, Triumph
# This file is distributed under the same license as the Blend4Web. User
# Manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
msgid ""
msgstr ""
"Project-Id-Version: Blend4Web. User Manual v16.03\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-04-06 16:12+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.2.0\n"

#: ../physics.rst:5
msgid "Physics"
msgstr ""

#: ../physics.rst
msgid "Table of Contents"
msgstr ""

#: ../physics.rst:12
msgid "Preparing for Use"
msgstr ""

#: ../physics.rst:14
msgid ""
"In order to enable physics on the scene, please use the ``Enable "
"Physics`` checkbox in the ``Physics`` panel under the scene tab in "
"Blender."
msgstr ""

#: ../physics.rst:23
msgid "Static Physics Type"
msgstr ""

#: ../physics.rst:25
msgid ""
"Can be used to limit the movement of other objects, for example to detect"
" collisions with a landscape, walls and so on. In the physics settings of"
" such an object the ``Static`` value (set by default) should be selected "
"for the ``Physics Type`` option."
msgstr ""

#: ../physics.rst:33
msgid ""
"One or multiple physics materials can be assigned to a mesh. Under the "
"``Material`` tab the ``Special: Collision`` panel must be activated."
msgstr ""

#: ../physics.rst:41
msgid ""
"The ``Ghost`` option excludes the material from physical interactions but"
" still notifies the application about the contact with it. An example - "
"detecting that the character is located on a vertical ladder."
msgstr ""

#: ../physics.rst:49
msgid ""
"The ``Collision ID`` field is intended for detecting collisions with "
"specific materials and can be left empty. An example of ``Collision ID`` "
"usage is detecting the landscape surface a character is located on - "
"grass, sand, wooden coating and so on."
msgstr ""

#: ../physics.rst:51
msgid ""
"The ``Margin`` field allows to customize the width of the zone where mesh"
" reacts on collisions. This option improves physical collisions "
"simulation stability."
msgstr ""

#: ../physics.rst:53
msgid ""
"Also, there are material physics settings in this panel. The following "
"settings are supported: ``Friction``, ``Elasticity``."
msgstr ""

#: ../physics.rst:55
msgid ""
"The ``Collision Group`` field corresponds to the physics group which the "
"material belongs to. The ``Collision Mask`` field defines all physics "
"groups with which this material will interact."
msgstr ""

#: ../physics.rst:58
msgid "Dynamic Physics Type"
msgstr ""

#: ../physics.rst:60
msgid "Intended for rigid body movement simulation."
msgstr ""

#: ../physics.rst:68
msgid ""
"The ``Object Physics`` checkbox must be enabled under the object's "
"``Physics`` panel. The ``Collision ID`` field is intended for detecting "
"collisions with a specific object (for example, for detecting proximity "
"of a FPS character to different items) and can be left empty."
msgstr ""

#: ../physics.rst:70
msgid ""
"In the physics settings of such an object the ``Rigid Body`` (with "
"rotations) or ``Dynamic`` (without rotations) values can be selected for "
"the ``Physics Type`` option. In the ``Collision Bounds`` settings the "
"collider type can be selected - the supported types are: ``Box``, "
"``Capsule``, ``Sphere``, ``Cylinder``, ``Cone``. Also, the following "
"physics parameters can be set: ``Mass``, ``Damping`` - for "
"``Translation`` and ``Rotation``."
msgstr ""

#: ../physics.rst:72
msgid ""
"The ``Collision Group`` field corresponds to the physics group which the "
"object belongs to."
msgstr ""

#: ../physics.rst:74
msgid ""
"The ``Collision Mask`` field defines all physics groups with which this "
"object will interact."
msgstr ""

#: ../physics.rst:82
msgid ""
"``Friction`` and ``Elasticity`` are supported for the material of such an"
" object. When multiple materials are used on a single mesh, the physics "
"parameters are taken from the first of them."
msgstr ""

#: ../physics.rst:84
msgid ""
"For the camera object the ``Physics Type`` = ``Dynamic`` parameter must "
"be used, and the ``Object Physics`` checkbox must be enabled."
msgstr ""

#: ../physics.rst:87
msgid "Constraints"
msgstr ""

#: ../physics.rst:89
msgid ""
"Physical constraints are used for limiting the objects' degrees of "
"freedom."
msgstr ""

#: ../physics.rst:97
msgid ""
"Adding a physical constraint (``Rigid Body Joint``) to the object can be "
"performed on the ``Object Constraints`` panel. The supported types "
"(``Pivot Type``) are: ``Ball``, ``Hinge``, ``Cone Twist``, ``Generic 6 "
"DoF``. A physical constraint can be added to one of the two interacting "
"objects, while the other object acts as a ``Target``. Both objects can "
"have a static and/or dynamic physics type. In constraints (except "
"``Ball``) the translation and rotation limits can be set up."
msgstr ""

#: ../physics.rst:107
msgid "Wheeled Vehicles"
msgstr ""

#: ../physics.rst:109
msgid ""
"The model of a vehicle must consist of 6 separate objects - a chassis, 4 "
"wheels and a steering wheel. The chassis' mesh center should correspond "
"to the mass center. The centers of the wheels' and the steering wheel's "
"meshes should be located on the rotation axes. The steering wheel should "
"be oriented in the local space of coordinates - X - the rotation axis, Y "
"- to the right and Z - upwards. The object can have any names."
msgstr ""

#: ../physics.rst:117
msgid ""
"For all 6 objects: select the ``Part``, specify the same id in the "
"``Vehicle Name`` field, select the right object type - ``Chassis``, "
"``Steering Wheel``, ``Back Right Wheel`` and so on. The ``Suspension Rest"
" Length`` setting is also available for the wheels."
msgstr ""

#: ../physics.rst:119
msgid ""
"It is necessary to specify a realistic mass for the chassis (because the "
"default value is only 1 kg). To do this go to the physics settings, "
"choose the ``Rigid Body`` value for the ``Physics Type`` option and "
"specify the required value (for example, 1000 kg) in the ``Mass`` field."
msgstr ""

#: ../physics.rst:122
msgid "Chassis Settings"
msgstr ""

#: ../physics.rst:125 ../physics.rst:197
msgid "*Force Max*"
msgstr ""

#: ../physics.rst:125 ../physics.rst:197
msgid "Maximum driving force of the vehicle."
msgstr ""

#: ../physics.rst:128 ../physics.rst:200
msgid "*Brake Max*"
msgstr ""

#: ../physics.rst:128 ../physics.rst:200
msgid "Maximum braking coefficient."
msgstr ""

#: ../physics.rst:131
msgid "*Suspension Compression*"
msgstr ""

#: ../physics.rst:131
msgid "Damping coefficient for suspension stretching."
msgstr ""

#: ../physics.rst:134
msgid "*Suspension Stiffness*"
msgstr ""

#: ../physics.rst:134
msgid "Suspension stiffness coefficient."
msgstr ""

#: ../physics.rst:137
msgid "*Suspension Damping*"
msgstr ""

#: ../physics.rst:137
msgid "Suspension damping coefficient."
msgstr ""

#: ../physics.rst:140
msgid "*Wheel Friction*"
msgstr ""

#: ../physics.rst:140
msgid ""
"Friction constant between the wheels and the surface. It should be around"
" 0.8 for realistic vehicles. But it can be increased significantly to "
"achieve a better control (1000 and more)."
msgstr ""

#: ../physics.rst:143
msgid "*Roll Influence*"
msgstr ""

#: ../physics.rst:143
msgid ""
"Decreases the wheels' torque decreasing the probability of the vehicle "
"overturning (0 - no torque, 1 - real physics behavior)."
msgstr ""

#: ../physics.rst:146
msgid "*Max Suspension Travel Cm*"
msgstr ""

#: ../physics.rst:146
msgid "Maximum suspension travel in centimeters."
msgstr ""

#: ../physics.rst:148
msgid ""
"For the ``Steering Wheel`` it is necessary to specify the maximum "
"steering angle (``Steering Max``) and the ratio between the turn of the "
"steering wheel and the turn of the wheels  (``Steering Ratio``). The "
"maximum steering angle value is specified in revolutions. A single "
"revolution equals to 360 degrees. Therefore, if ``Steering Max`` is equal"
" to one and ``Steering Ratio`` is equal to 10, the maximum turn of the "
"steering wheel will be 360 degrees and the maximum turn of the front "
"wheels will be 36 degrees."
msgstr ""

#: ../physics.rst:150
msgid ""
"On this stage you can export and load the scene into the engine. We "
"recommend to create a road surface with a physics material. To choose the"
" controlled object press the ``Q`` key in the Viewer and select the "
"chassis. Use the ``W``, ``A``, ``S``, ``D`` keys as controls."
msgstr ""

#: ../physics.rst:152
msgid ""
"We can additionally tweak the ``Damping`` of ``Translation`` and "
"``Rotation``. This will influence the speed and inertia of the vehicle."
msgstr ""

#: ../physics.rst:154
msgid ""
"The friction and elasticity of the road surface material do not influence"
" the vehicle's behavior."
msgstr ""

#: ../physics.rst:158
msgid "Floating Objects"
msgstr ""

#: ../physics.rst:166
msgid ""
"In order for the object to float on the water surface (an object with the"
" ``Water`` material), it is necessary to enable the ``Floater`` panel. "
"There are two types of floating objects: ``Main Body`` - the floating "
"object itself and ``Bob`` - an auxiliary bob-object onto which the "
"buoyancy will be acting. A floating object can have an unlimited number "
"of ``Bob`` objects. This can be both meshes or ``Empty`` objects."
msgstr ""

#: ../physics.rst:168
msgid ""
"All objects that are part of the same floating object must have the same "
"name in the ``Floater Name`` field."
msgstr ""

#: ../physics.rst:171
msgid "Floating Object Settings"
msgstr ""

#: ../physics.rst:174 ../physics.rst:203
msgid "*Floating Factor*"
msgstr ""

#: ../physics.rst:174 ../physics.rst:203
msgid "Buoyancy coefficient."
msgstr ""

#: ../physics.rst:177 ../physics.rst:206
msgid "*Water Linear Damping*"
msgstr ""

#: ../physics.rst:177 ../physics.rst:206
msgid ""
"Linear velocity damping when the object is on the water surface (or under"
" water). When the object is not in water, the physics settings are used."
msgstr ""

#: ../physics.rst:180 ../physics.rst:209
msgid "*Water Rotation Damping*"
msgstr ""

#: ../physics.rst:180 ../physics.rst:209
msgid ""
"Rotation damping when the object is on the water surface (or under "
"water). When the object is not in water, the physics settings are used."
msgstr ""

#: ../physics.rst:183
msgid "Floating Vehicles aka Watercrafts"
msgstr ""

#: ../physics.rst:191
msgid ""
"Watercrafts use some parameters from the ``Vehicle`` settings and all the"
" settings which are similar to ``Floater`` setting. It is necessary to "
"set the ``Part`` type ``Hull`` on the main object. Similar to a floating "
"object a watercraft requires auxiliary ``Bob`` objects."
msgstr ""

#: ../physics.rst:194
msgid "Watercraft Settings"
msgstr ""

#: ../physics.rst:212
msgid "Use in Applications"
msgstr ""

#: ../physics.rst:214
msgid ""
"The physics system is implemented in the **uranium.js** module and loaded"
" separately from the engine's main code. The **uranium.js** module itself"
" is a modification of the `Bullet <http://bulletphysics.org/>`_ physics "
"engine, which is ported to work in browsers. In order to activate the "
"physics system, it is enough to put the **uranium.js** and "
"**uranium.js.mem** files in the same directory as the source code of the "
"application."
msgstr ""

#: ../physics.rst:216
msgid ""
"Another way is to explicitly specify the loading path of the "
"**uranium.js** module by using the following API method:"
msgstr ""

#: ../physics.rst:224
msgid ""
"When applications are developed :ref:`within the SDK "
"<project_management>`, the path to the physics engine is detected "
"automatically."
msgstr ""

#: ../physics.rst:226
msgid ""
"If your application does not use physics, we recommend you to turn off "
"the ``Enable Physics`` flag in the ``Physics`` panel under the scene tab "
"in Blender. It is also possible to forcibly disable loading of the "
"**uranium.js** module by calling the following method before "
"initialization of the engine:"
msgstr ""

#~ msgid ""
#~ "It is neccessary to specify a "
#~ "realistic mass for the chassis (because"
#~ " the default value is only 1 "
#~ "kg). To do this go to the "
#~ "physics settings, choose the ``Rigid "
#~ "Body`` value for the ``Physics Type``"
#~ " option and specify the required "
#~ "value (for example, 1000 kg) in "
#~ "the ``Mass`` field."
#~ msgstr ""

#~ msgid ""
#~ "For the ``Steering Wheel`` it is "
#~ "necessary to specify the maximum "
#~ "steering angle (``Steering Max``) and "
#~ "the ratio between the turn of the"
#~ " steering wheel and the turn of "
#~ "the wheels  (``Steering Ratio``). The "
#~ "maximum steering angle value is "
#~ "specified in revolutions. A single "
#~ "revolution equals to 360 degrees. "
#~ "Therefore if ``Steering Max`` is equal"
#~ " to one and ``Steering Ratio`` is "
#~ "equal to 10, the maximum turn of"
#~ " the steering wheel will be 360 "
#~ "degrees and the maximum turn of "
#~ "the front wheels will be 36 "
#~ "degrees."
#~ msgstr ""

#~ msgid ""
#~ "We can additionally tweak the "
#~ "``Damping`` of ``Translation`` and "
#~ "``Rotation``. This will influence the "
#~ "speed and inertion of the vehicle."
#~ msgstr ""

#~ msgid ""
#~ "In order for the object to float"
#~ " on the water surface (an object "
#~ "with the ``Water`` material), it is "
#~ "neccessary to enable the ``Floater`` "
#~ "panel. There are two types of "
#~ "floating objects: ``Main Body`` - the"
#~ " floating object itself and ``Bob`` -"
#~ " an auxiallary bob-object onto which"
#~ " the buoyancy will be acting. A "
#~ "floating object can have an unlimited"
#~ " number of ``Bob`` objects. This can"
#~ " be both meshes or ``Empty`` objects."
#~ msgstr ""

#~ msgid ""
#~ "Linear velocity damping when the object"
#~ " is on the water surface (or "
#~ "under water). When the object is "
#~ "not in water the physics settings "
#~ "are used."
#~ msgstr ""

#~ msgid ""
#~ "Rotation damping when the object is "
#~ "on the water surface (or under "
#~ "water). When the object is not in"
#~ " water the physics settings are used."
#~ msgstr ""

#~ msgid ""
#~ "Watercrafts use some parameters from the"
#~ " ``Vehicle`` settings and all the "
#~ "settings which are similar to "
#~ "``Floater`` setting. It is neccessary to"
#~ " set the ``Part`` type ``Hull`` on"
#~ " the main object. Similar to a "
#~ "floating object a watercraft requires "
#~ "auxillary ``Bob`` objects."
#~ msgstr ""

